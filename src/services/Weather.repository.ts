import { WeatherInfo, ResultType } from "./Weather";
import WeatherService from "./Weather.service";

class WeatherRepository {

    private service: WeatherService

    constructor(service: WeatherService) {
        this.service = service
    }

    async getByCity(city: string): Promise<ResultType<Error, WeatherInfo>> {
        console.log(`Fetching weather for city: `, city)
        return await this.service.getByCity(city)

        // if (!err || !!data) {
        //     console.error(err)
        //     return err
        // }
        // if (!data) {
        //     return data as WeatherInfo
        // }

        // return { "latitude": 45.96, "longitude": 12.66, "generationtime_ms": 0.07200241088867188, "utc_offset_seconds": 7200, "timezone": "Europe/Berlin", "timezone_abbreviation": "CEST", "elevation": 28.0, "hourly_units": { "time": "iso8601", "temperature_2m": "Â°C", "precipitation": "mm", "weather_code": "wmo code", "wind_speed_10m": "km/h" }, "hourly": { "time": ["2024-10-21T00:00", "2024-10-21T01:00", "2024-10-21T02:00", "2024-10-21T03:00", "2024-10-21T04:00", "2024-10-21T05:00", "2024-10-21T06:00", "2024-10-21T07:00", "2024-10-21T08:00", "2024-10-21T09:00", "2024-10-21T10:00", "2024-10-21T11:00", "2024-10-21T12:00", "2024-10-21T13:00", "2024-10-21T14:00", "2024-10-21T15:00", "2024-10-21T16:00", "2024-10-21T17:00", "2024-10-21T18:00", "2024-10-21T19:00", "2024-10-21T20:00", "2024-10-21T21:00", "2024-10-21T22:00", "2024-10-21T23:00", "2024-10-22T00:00", "2024-10-22T01:00", "2024-10-22T02:00", "2024-10-22T03:00", "2024-10-22T04:00", "2024-10-22T05:00", "2024-10-22T06:00", "2024-10-22T07:00", "2024-10-22T08:00", "2024-10-22T09:00", "2024-10-22T10:00", "2024-10-22T11:00", "2024-10-22T12:00", "2024-10-22T13:00", "2024-10-22T14:00", "2024-10-22T15:00", "2024-10-22T16:00", "2024-10-22T17:00", "2024-10-22T18:00", "2024-10-22T19:00", "2024-10-22T20:00", "2024-10-22T21:00", "2024-10-22T22:00", "2024-10-22T23:00", "2024-10-23T00:00", "2024-10-23T01:00", "2024-10-23T02:00", "2024-10-23T03:00", "2024-10-23T04:00", "2024-10-23T05:00", "2024-10-23T06:00", "2024-10-23T07:00", "2024-10-23T08:00", "2024-10-23T09:00", "2024-10-23T10:00", "2024-10-23T11:00", "2024-10-23T12:00", "2024-10-23T13:00", "2024-10-23T14:00", "2024-10-23T15:00", "2024-10-23T16:00", "2024-10-23T17:00", "2024-10-23T18:00", "2024-10-23T19:00", "2024-10-23T20:00", "2024-10-23T21:00", "2024-10-23T22:00", "2024-10-23T23:00"], "temperature_2m": [14.0, 13.7, 13.0, 12.7, 12.4, 12.8, 12.6, 12.3, 12.0, 12.5, 15.2, 17.4, 19.0, 20.1, 20.7, 21.0, 20.9, 20.5, 19.9, 18.1, 16.7, 16.1, 15.3, 14.8, 14.7, 14.7, 14.8, 14.9, 15.0, 15.1, 15.2, 15.1, 15.1, 15.6, 16.8, 18.1, 19.3, 20.4, 20.8, 21.0, 21.0, 20.8, 19.9, 19.1, 18.3, 17.0, 16.1, 15.9, 15.8, 15.7, 15.5, 15.7, 15.7, 15.6, 15.2, 15.2, 15.3, 14.6, 16.3, 17.5, 18.4, 19.3, 19.2, 19.0, 18.9, 18.8, 18.3, 17.6, 17.2, 16.9, 16.7, 16.6], "precipitation": [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.10, 0.00, 0.00, 0.00, 0.00, 0.00, 0.10, 0.00, 0.00, 0.00, 0.00, 0.40, 0.50, 0.40, 0.10, 0.00, 0.10, 0.10, 0.30, 0.50, 0.40], "weather_code": [1, 1, 0, 0, 1, 2, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 45, 45, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 45, 45, 45, 45, 61, 61, 45, 45, 45, 45, 45, 45, 3, 3, 3, 3, 61, 61, 61, 61, 3, 61, 61, 61, 61, 61], "wind_speed_10m": [4.6, 3.7, 3.8, 3.3, 3.5, 4.2, 2.7, 2.6, 2.5, 1.6, 2.5, 0.0, 2.2, 2.5, 3.3, 3.4, 4.2, 3.9, 1.1, 3.2, 3.5, 1.1, 3.6, 3.3, 4.1, 2.6, 1.8, 2.0, 3.0, 2.6, 2.8, 2.3, 1.8, 1.9, 2.1, 2.7, 2.6, 3.9, 5.3, 6.3, 4.9, 4.2, 3.1, 2.2, 0.7, 1.8, 2.1, 3.0, 1.4, 2.3, 3.7, 2.5, 5.2, 3.1, 2.5, 2.2, 1.8, 2.9, 1.8, 1.9, 1.8, 0.4, 0.5, 2.7, 4.9, 6.2, 5.4, 4.6, 6.1, 5.6, 5.2, 5.8] } }
    }

}

export default WeatherRepository